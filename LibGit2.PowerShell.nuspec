<?xml version="1.0"?>
<!--
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
   
       http://www.apache.org/licenses/LICENSE-2.0
   
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<package>
  <metadata>
    <id>LibGit2.PowerShell</id>
    <version>0.3.0</version>
    <authors>Aaron Jensen</authors>
    <owners>Aaron Jensen</owners>
    <licenseUrl>http://www.apache.org/licenses/LICENSE-2.0</licenseUrl>
    <projectUrl>https://github.com/splatteredbits/LibGit2.PowerShell/wiki</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <summary>LibGit2 is a PowerShell module that wraps the libgit2 library.</summary>
    <description>LibGit2 is a PowerShell module for working with Git repositories. You can use it to create, clone, query, push to, pull from, and commit to Git repositories.
    
This module uses the .NET wrapper of [libgit2](https://libgit2.github.com/), "a portable, pure C implementation of... Git", which allows you to call Git via API instead using the Git command line interface.</description>
    <language>en-us</language>
    <releaseNotes>
 * Added `Get-GitCommit` function for getting commits.
 * Added `Test-GitOutgoingCommit` function for checking if there are outgoing changes.
 * Added `Test-GitUncommmittedChange` function for checking if there are any uncommitted changes in a repository.
 * Added `Receive-GitCommit` function for pulling/fetching changes into a repository from a remote repository.
 * Added `Test-GitRemoteUri` function for testing if a URI points to a Git repository.
 * Added `Test-GitIncomingCommit` function for testing if there are incoming/unpulled/unfetched commits.
 * Added `Get-GitBranch` function for getting the branches in a repository.
 * Added `New-GitBranch` function for creating a new branch in a repository.
 * Added `Test-GitBranch` function for testing if a branch exists in a repository.
 * Added `Get-GitTag` function for getting the tags in a repository.
 * Added `New-GitTag` function for creating tags in a repository.
 * Added `Test-GitTag` function for testing if a tag exists in a repository.
 * Added `Update-GitRepository` for updating a repository to a commit, branch, tag, etc, i.e. for checking out a specific commit.

</releaseNotes>
    <copyright>Copyright 2016 Aaron Jensen</copyright>
    <tags>git vcs rcs automation github gitlab libgit2</tags>
  </metadata>
  <files>
    <file src=".\LibGit2\**\*" target="LibGit2" exclude="**\*.pdb;**\*.Tests.ps1" />
    <file src=".\Tools\chocolateyInstall.ps1" target="Tools" />
    <file src=".\Tools\chocolateyUninstall.ps1" target="Tools" />
    <file src=".\LICENSE*" target="" />
    <file src=".\LICENSE*" target="LibGit2" />
    <file src=".\NOTICE*" target="" />
    <file src=".\NOTICE*" target="LibGit2" />
    <file src=".\RELEASE_NOTES.md" target="" />
    <file src=".\RELEASE_NOTES.md" target="LibGit2" />
  </files>
</package>